name: Publish multi-platform (Linux + Windows)

permissions:
  contents: read
  packages: write

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'platform_infra/docker/orchestrator.windows.Dockerfile'
      - 'platform_infra/docker/entrypoint.ps1'
      - 'platform_infra/docker/healthcheck.py'
      - 'scripts/**'
      - 'config/**'
      - 'db/**'
      - 'utils/**'

env:
  # tag will be changed using VERSION number
  TAG: "1.0.0"                       # single tag for testing the manifest
  IMAGE_NAME: smartmon-orchestrator
  DOCKERHUB_REPO: anselemo/${{ env.IMAGE_NAME }}
  GHCR_REPO: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}

jobs:
  # ---------- LINUX ----------
  build_linux:
    runs-on: ubuntu-latest
    outputs:
      dh_tag: ${{ steps.out.outputs.dh_tag }}
      gh_tag: ${{ steps.out.outputs.gh_tag }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: platform_infra/docker/orchestrator.linux.Dockerfile
          platforms: linux/amd64
          push: true
          provenance: false
          tags: |
            ${{ env.DOCKERHUB_REPO }}:${{ env.TAG }}-linux
            ${{ env.GHCR_REPO }}:${{ env.TAG }}-linux

      - id: out
        run: |
          echo "dh_tag=${{ env.DOCKERHUB_REPO }}:${{ env.TAG }}-linux" >> $GITHUB_OUTPUT
          echo "gh_tag=${{ env.GHCR_REPO }}:${{ env.TAG }}-linux" >> $GITHUB_OUTPUT

  # ---------- WINDOWS (matrix for base variants) ----------
  build_windows:
    runs-on: windows-2022
    needs: build_linux
    strategy:
      fail-fast: false
      matrix:
        base:
          - name: win-ltsc2022
            from: mcr.microsoft.com/windows/servercore:ltsc2022
          - name: win-23H2
            from: mcr.microsoft.com/windows/servercore:23H2
    env:
      DOCKER_BUILDKIT: 0   # classic builder is more reliable on hosted Windows
    steps:
      - uses: actions/checkout@v4

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # IMPORTANT: Windows Dockerfile must have:
      #   ARG BASE_IMAGE=mcr.microsoft.com/windows/servercore:ltsc2022
      #   FROM ${BASE_IMAGE} AS windows
      - name: Build & push Windows - ${{ matrix.base.name }}
        run: |
          $DH = "${{ env.DOCKERHUB_REPO }}:${{ env.TAG }}-${{ matrix.base.name }}"
          $GH = "${{ env.GHCR_REPO }}:${{ env.TAG }}-${{ matrix.base.name }}"
          docker build `
            --build-arg BASE_IMAGE=${{ matrix.base.from }} `
            -f platform_infra/docker/orchestrator.windows.Dockerfile `
            -t $DH -t $GH .
          docker push $DH
          docker push $GH

  # ---------- MANIFEST MERGE ----------
  make_manifests:
    runs-on: ubuntu-latest
    needs: [build_linux, build_windows]
    steps:
      - uses: docker/setup-buildx-action@v3

      # Docker Hub manifest
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create Docker Hub manifest (fixed TAG)
        run: |
          V="${{ env.TAG }}"
          docker buildx imagetools create \
            -t ${{ env.DOCKERHUB_REPO }}:${V} \
            -t ${{ env.DOCKERHUB_REPO }}:latest \
            ${{ env.DOCKERHUB_REPO }}:${V}-linux \
            ${{ env.DOCKERHUB_REPO }}:${V}-win-ltsc2022 \
            ${{ env.DOCKERHUB_REPO }}:${V}-win-23H2
          docker buildx imagetools inspect ${{ env.DOCKERHUB_REPO }}:${V}

      # GHCR manifest
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GHCR manifest (fixed TAG)
        run: |
          V="${{ env.TAG }}"
          docker buildx imagetools create \
            -t ${{ env.GHCR_REPO }}:${V} \
            -t ${{ env.GHCR_REPO }}:latest \
            ${{ env.GHCR_REPO }}:${V}-linux \
            ${{ env.GHCR_REPO }}:${V}-win-ltsc2022 \
            ${{ env.GHCR_REPO }}:${V}-win-23H2
          docker buildx imagetools inspect ${{ env.GHCR_REPO }}:${V}






































































# name: publish-multi-platform
# on:
#   workflow_dispatch:
#   push:
#     tags: ["v*"]   # runs on v1.0.0, v1.0.1, etc.
#
# permissions:
#   contents: read
#   packages: write
#
# env:
#   IMAGE_NAME: smartmon-orchestrator
#   DOCKERHUB_REPO: anselemo/smartmon-orchestrator
#   GHCR_REPO: ghcr.io/anselem-okeke/smartmon-orchestrator
#
# jobs:
#   # Derive VERSION = strip leading 'v' from tag, expose as output
#   meta:
#     runs-on: ubuntu-latest
#     outputs:
#       version: ${{ steps.v.outputs.version }}
#     steps:
#       - name: Derive version from tag
#         id: v
#         run: |
#           RAW="${GITHUB_REF_NAME}"          # e.g. v1.0.0
#           echo "version=${RAW#v}" >> $GITHUB_OUTPUT
#
#   build_windows:
#     runs-on: windows-2022
#     needs: meta
#     steps:
#       - uses: actions/checkout@v4
#       - uses: docker/setup-buildx-action@v3
#
#       # Login to BOTH registries
#       - uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}
#       - uses: docker/login-action@v3
#         with:
#           registry: ghcr.io
#           username: ${{ secrets.GHCR_USERNAME }}
#           password: ${{ secrets.GHCR_TOKEN }}
#
#       # Build & push Windows image with two tags (DH + GHCR)
#       - name: Build & push Windows
#         id: win
#         uses: docker/build-push-action@v5
#         with:
#           context: .
#           file: platform_infra/docker/orchestrator.windows.Dockerfile
#           platforms: windows/amd64
#           push: true
#           provenance: false
#           tags: |
#             ${{ env.DOCKERHUB_REPO }}:${{ needs.meta.outputs.version }}-win
#             ${{ env.GHCR_REPO }}:${{ needs.meta.outputs.version }}-win
#
#   build_linux:
#     runs-on: ubuntu-latest
#     needs: meta
#     steps:
#       - uses: actions/checkout@v4
#       - uses: docker/setup-buildx-action@v3
#
#       # Login to BOTH registries
#       - uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}
#       - uses: docker/login-action@v3
#         with:
#           registry: ghcr.io
#           username: ${{ secrets.GHCR_USERNAME }}
#           password: ${{ secrets.GHCR_TOKEN }}
#
#       # Build & push Linux image with two tags (DH + GHCR)
#       - name: Build & push Linux
#         id: lin
#         uses: docker/build-push-action@v5
#         with:
#           context: .
#           file: platform_infra/docker/orchestrator.linux.Dockerfile
#           platforms: linux/amd64
#           push: true
#           provenance: false
#           tags: |
#             ${{ env.DOCKERHUB_REPO }}:${{ needs.meta.outputs.version }}-linux
#             ${{ env.GHCR_REPO }}:${{ needs.meta.outputs.version }}-linux
#
#   make_manifests:
#     runs-on: ubuntu-latest
#     needs: [meta, build_windows, build_linux]
#     steps:
#       - uses: docker/setup-buildx-action@v3
#
#       # ----- Docker Hub manifest -----
#       - uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#       - name: Create DH manifest (version + latest)
#         run: |
#           V="${{ needs.meta.outputs.version }}"
#           docker buildx imagetools create \
#             -t ${{ env.DOCKERHUB_REPO }}:${V} \
#             -t ${{ env.DOCKERHUB_REPO }}:latest \
#             ${{ env.DOCKERHUB_REPO }}:${V}-linux \
#             ${{ env.DOCKERHUB_REPO }}:${V}-win
#           docker buildx imagetools inspect ${{ env.DOCKERHUB_REPO }}:${V}
#
#       # ----- GHCR manifest -----
#       - uses: docker/login-action@v3
#         with:
#           registry: ghcr.io
#           username: ${{ secrets.GHCR_USERNAME }}
#           password: ${{ secrets.GHCR_TOKEN }}
#
#       - name: Create GHCR manifest (version + latest)
#         run: |
#           V="${{ needs.meta.outputs.version }}"
#           docker buildx imagetools create \
#             -t ${{ env.GHCR_REPO }}:${V} \
#             -t ${{ env.GHCR_REPO }}:latest \
#             ${{ env.GHCR_REPO }}:${V}-linux \
#             ${{ env.GHCR_REPO }}:${V}-win
#           docker buildx imagetools inspect ${{ env.GHCR_REPO }}:${V}
